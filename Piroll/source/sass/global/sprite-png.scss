// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$partner-logo-1-dark-name: 'partner-logo-1-dark';
$partner-logo-1-dark-x: 0px;
$partner-logo-1-dark-y: 0px;
$partner-logo-1-dark-offset-x: 0px;
$partner-logo-1-dark-offset-y: 0px;
$partner-logo-1-dark-width: 500px;
$partner-logo-1-dark-height: 333px;
$partner-logo-1-dark-total-width: 1500px;
$partner-logo-1-dark-total-height: 999px;
$partner-logo-1-dark-image: '../img/sprite.png';
$partner-logo-1-dark: (0px, 0px, 0px, 0px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-1-dark', );
$partner-logo-2-dark-name: 'partner-logo-2-dark';
$partner-logo-2-dark-x: 500px;
$partner-logo-2-dark-y: 0px;
$partner-logo-2-dark-offset-x: -500px;
$partner-logo-2-dark-offset-y: 0px;
$partner-logo-2-dark-width: 500px;
$partner-logo-2-dark-height: 333px;
$partner-logo-2-dark-total-width: 1500px;
$partner-logo-2-dark-total-height: 999px;
$partner-logo-2-dark-image: '../img/sprite.png';
$partner-logo-2-dark: (500px, 0px, -500px, 0px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-2-dark', );
$partner-logo-3-dark-name: 'partner-logo-3-dark';
$partner-logo-3-dark-x: 0px;
$partner-logo-3-dark-y: 333px;
$partner-logo-3-dark-offset-x: 0px;
$partner-logo-3-dark-offset-y: -333px;
$partner-logo-3-dark-width: 500px;
$partner-logo-3-dark-height: 333px;
$partner-logo-3-dark-total-width: 1500px;
$partner-logo-3-dark-total-height: 999px;
$partner-logo-3-dark-image: '../img/sprite.png';
$partner-logo-3-dark: (0px, 333px, 0px, -333px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-3-dark', );
$partner-logo-4-dark-name: 'partner-logo-4-dark';
$partner-logo-4-dark-x: 500px;
$partner-logo-4-dark-y: 333px;
$partner-logo-4-dark-offset-x: -500px;
$partner-logo-4-dark-offset-y: -333px;
$partner-logo-4-dark-width: 500px;
$partner-logo-4-dark-height: 333px;
$partner-logo-4-dark-total-width: 1500px;
$partner-logo-4-dark-total-height: 999px;
$partner-logo-4-dark-image: '../img/sprite.png';
$partner-logo-4-dark: (500px, 333px, -500px, -333px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-4-dark', );
$partner-logo-5-dark-name: 'partner-logo-5-dark';
$partner-logo-5-dark-x: 0px;
$partner-logo-5-dark-y: 666px;
$partner-logo-5-dark-offset-x: 0px;
$partner-logo-5-dark-offset-y: -666px;
$partner-logo-5-dark-width: 500px;
$partner-logo-5-dark-height: 333px;
$partner-logo-5-dark-total-width: 1500px;
$partner-logo-5-dark-total-height: 999px;
$partner-logo-5-dark-image: '../img/sprite.png';
$partner-logo-5-dark: (0px, 666px, 0px, -666px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-5-dark', );
$partner-logo-6-dark-name: 'partner-logo-6-dark';
$partner-logo-6-dark-x: 500px;
$partner-logo-6-dark-y: 666px;
$partner-logo-6-dark-offset-x: -500px;
$partner-logo-6-dark-offset-y: -666px;
$partner-logo-6-dark-width: 500px;
$partner-logo-6-dark-height: 333px;
$partner-logo-6-dark-total-width: 1500px;
$partner-logo-6-dark-total-height: 999px;
$partner-logo-6-dark-image: '../img/sprite.png';
$partner-logo-6-dark: (500px, 666px, -500px, -666px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-6-dark', );
$partner-logo-7-dark-name: 'partner-logo-7-dark';
$partner-logo-7-dark-x: 1000px;
$partner-logo-7-dark-y: 0px;
$partner-logo-7-dark-offset-x: -1000px;
$partner-logo-7-dark-offset-y: 0px;
$partner-logo-7-dark-width: 500px;
$partner-logo-7-dark-height: 333px;
$partner-logo-7-dark-total-width: 1500px;
$partner-logo-7-dark-total-height: 999px;
$partner-logo-7-dark-image: '../img/sprite.png';
$partner-logo-7-dark: (1000px, 0px, -1000px, 0px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-7-dark', );
$partner-logo-8-dark-name: 'partner-logo-8-dark';
$partner-logo-8-dark-x: 1000px;
$partner-logo-8-dark-y: 333px;
$partner-logo-8-dark-offset-x: -1000px;
$partner-logo-8-dark-offset-y: -333px;
$partner-logo-8-dark-width: 500px;
$partner-logo-8-dark-height: 333px;
$partner-logo-8-dark-total-width: 1500px;
$partner-logo-8-dark-total-height: 999px;
$partner-logo-8-dark-image: '../img/sprite.png';
$partner-logo-8-dark: (1000px, 333px, -1000px, -333px, 500px, 333px, 1500px, 999px, '../img/sprite.png', 'partner-logo-8-dark', );
$spritesheet-width: 1500px;
$spritesheet-height: 999px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($partner-logo-1-dark, $partner-logo-2-dark, $partner-logo-3-dark, $partner-logo-4-dark, $partner-logo-5-dark, $partner-logo-6-dark, $partner-logo-7-dark, $partner-logo-8-dark, );
$spritesheet: (1500px, 999px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
